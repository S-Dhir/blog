<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="google-site-verification" content="9icGUqyId7PWkx-IHMlq7fjP2Bc6TMm4EVHuzrDS4pE" />
    <script>
        var loadstart = performance.now();
    </script>
    <meta charset="utf-8">
    <meta name="description" content="a blog for everyone who needs to know about gaming">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="author" content="Shiven Dhir">

    <title>All you need to know about Computers | Shiven's blog</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Patrick+Hand&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Fredericka+the+Great&display=swap" rel="stylesheet"><!--Navbar--><!--|font-family: 'Fredericka the Great', cursive;|-->
    <link href="https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap" rel="stylesheet"><!--footer--><!--|font-family: 'Indie Flower', cursive;|-->
    <link href="https://fonts.googleapis.com/css2?family=Abril+Fatface&display=swap" rel="stylesheet"><!--Heading--><!--|font-family: 'Abril Fatface', cursive;|-->
    <link href="https://fonts.googleapis.com/css2?family=Lobster&display=swap" rel="stylesheet"><!--Popup--><!--|font-family: 'Lobster', cursive;|-->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Prompt:wght@300&display=swap" rel="stylesheet"><!--posts--><!--font-family: 'Prompt', sans-serif;-->
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Benne&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="basic_computers.css">
    <link rel="stylesheet" href="../../common_page.css">
    <link rel="shortcut icon" href="../../favicon.ico" type="image/x-icon">

    <script>

    </script>

</head>
<body id="body" style="margin-left: 0;">
    <div class="nav" style="margin-top: -2%;">
        <ul class="menu">
            <!--Navbar-->
            <li class="nav_list"><a href="../../index.html" class="link_url">Home</a></li>&nbsp;&nbsp;
            <li class="nav_list">|</li>
            <li class="nav_list"><a href="../../posts/basic_computers/basic_computers.htm" class="link_url">Basic computers </a></li>
            <li class="nav_list">|</li>
            <li class="nav_list"><a href="#" class="link_url" onclick="showform()">Subscribe </a></li>
        </ul>
    </div>
    <br><br><br><br><br><br><br><br><br>
    <h1 style="color: beige; font-size: 5.6vmin;">A brief into computers</h1>
    <h3 style="color: rgb(122, 197, 138);">by Shiven Dhir | Updated 29 June 2021 | 5:34 PM GMT +5:30</h3>
    <p class="post">We are surrounded by computers. There is at least one in every middle-class house. Except for those who are already buying one. If you are choosing between a computer. Be it desktop or laptop, then this is the right article for you! Or even if you don’t really see the use of a computer. </p>
    <h2>What is a computer?</h2>
    <p class="post">A computer is a machine. It mainly does calculations. It consists of a few parts that might seem complicated at start but you’ll learn it in a few days if you put in the effort. A computer has many different looks and designs. Here are some of the basic ones: </p>
    <img src="images/mobile.jpg" alt="mobile" class="blog_images">
    <p class="post">A mobile phone (Yes this is also a computer. Over the years people have called laptops and desktops computers forgetting that mobile phones are also computers.)</p>
    <img src="images/Laptop.png" alt="laptop" class="blog_images">
    <p class="post">Laptops <a href="https://www.google.co.in/search?q=laptop&tbm=isch&ved=2ahUKEwj1tIuM9Z3xAhXEVn0KHXwYAJAQ2-cCegQIABAA&oq=laptop&gs_lcp=CgNpbWcQAzIECCMQJzIECCMQJzIHCAAQsQMQQzIECAAQQzIECAAQQzIHCAAQsQMQQzIECAAQQzIFCAAQsQMyBQgAELEDMgUIABCxA1CU2wFYl-EBYJXjAWgAcAB4AIABkQKIAdwHkgEFMC41LjGYAQCgAQGqAQtnd3Mtd2l6LWltZ8ABAQ&sclient=img&ei=09rKYLX_EsSt9QP8sICACQ&bih=722&biw=1536&safe=active&hl=en-IN#imgrc=oSxcPPwMGI8YkM" style="font-size: 1vw;">source</a></p>
    <img src="images/desktop.png" alt="desktop" class="blog_images">
    <p class="post">Desktop</p>
    <img src="images/servers.png" alt="servers" class="blog_images">
    <p class="post">Servers</p> <br>
    <h2>So, what do they do?</h2>
    <p class="post">
        Oh, what these computers? Well, their main purpose is to do calculations faster than a human can. But, some people have taken this to the next level. Now they not only do a bunch of multiplication sums but, they are useful for making video games, video editing, animation, typing. Pretty much anything. You ever seen those kids stuck on to gadgets all day? That’s because these computers can do so much advanced calculations that they can show awesome stuff. Like games. 
    </p>
    <h2>Tell me more about these</h2>
    <p class="post">
        Sure! Here’s a few basic facts,
        <br>
        You would want to note that all computers are not as powerful as each other. For example, mobile phones can do less when compared to a server. A server may be able to do what 100 mobile phones can’t do! This means that say, you want a device that will be able to manage all the Whatsapp messages on earth. This means that it receives all messages that someone sends and then forwards it to the people who should receive the message. So let’s say person A sends a message to person B. What the device A will do is send you information like, the message, the name of the person and that this message is to be delivered to person B. If this is a mobile phone that is doing this then, one message it will be able to send. It will receive, run a programme, which will forward the message almost instantly after receiving. But imagine if 2 Billion messages were sent to this mobile at the same time. All are being sent to different people, all have different messages, and some even have files with them. A very powerful computer will be needed to handle so much. Or else, if you use your mobile for this, then the phone will shut down due to heavy load. Or worse could happen. With the heat that will be generated, the phone could burn. Below, I have listed some pointers specific to every computer that I have mentioned. <br>
        <p class="post" style="font-size: 1.5vw;">•	Mobile phones</p>
        <p style="margin-left: 4vw;" class="post">These computers are the most used and bought ones. Mostly because they are small enough to fit into people’s pockets. These computers have the least computing power when compared to the other ones in this blog. Their size and lack of performance makes them the cheapest too! Nevertheless, these computers are powerful enough for the average person to call, text or even watch movies and play low weight games.</p>
        <p class="post" style="font-size: 1.5vw;">•	Laptops and Desktops</p>
        <p style="margin-left: 4vw;" class="post">I am talking about these two devices together because they are pretty same. They can have the same power but generally, desktops have more power. Laptops maybe less powerful but they are portable. They can easily fit in a bag and be put on your lap. It is although possible that when 2 brand new laptops and desktops are compared, both with the same computing power, the laptop is more costly. This is since you, yes, I mean you, can make a desktop. You can bring all the parts and assemble it. But a laptop is always branded. If you want portability (Which most people do (which makes it more in demand leading to higher price)) then you have to go for a laptop. But if you want a cheaper, easily cooled, can be upgraded and a more powerful thing then go for a desktop.</p>
        <p class="post" style="font-size: 1.5vw;">•	Servers</p>
        <p style="margin-left: 4vw;" class="post">The above computers are easily available (Maybe not in COVID-19 (Which is when this article was written)). But a server, you will not find anyone selling a server in a mall. Have you ever heard that earlier computers were the size of a room? It can be as huge as an Office building or even as small as a room like the first ones but, they are so much more powerful than the first ones. And I mean generally. The first ones were probably less powerful than mobile phones but, some servers are faster and smarter than Vril Dox <sup>(according to google, the smartest superhero!)</sup></p>
    </p></p>
    <div id="popup" class="popup_container" style="opacity: 0.8; display: none;">
                
    </div>
    <div class="popup_container" style="z-index: 1000000001; background:none; display: none;" id="popup2">
        <i class="fa fa-window-close popupclose" style="font-size: 3vmax;" onclick="popupclose()"></i>

        <div class="popup"><!--Comment-->
            
        <h2 class="popup_h3">Hey, why don't you consider subscribing?</h2>
        <p id="error" class="text errorMessage"></p>
        <img src="../../google_logo.png" alt="subscribe with google" class="signin_opt" style="margin: auto; display: block; cursor: pointer; background: none; width: 45%;" onclick="signingoogle()">
            
        <h3 style="text-align: center;" class="popup_h3">OR</h3>
            
        <input type="text" id="email_holder" placeholder="Enter your email here" onsearch="signinemail(document.getElementById('email_holder').value)" class="input"><br>
            
        <button onclick="signinemail(document.getElementById('email_holder').value)" class="enter_email"><i class="material-icons">&#xe0be;</i><div style="font-size: 2vw;">&nbsp;Subscribe with email</div></button>
            
                
        </div>

    </div>
    <br><br><br><br><br><br><br>
    <div class="footer" id="footer">
            <p class="text">
            <a href="posts/basic_computers/basic_computers.htm" class="text_url" style="text-decoration: underline;">Check out my latest post</a>
            <a href="https://github.com/S-Dhir/blog" class="text_url" style="text-decoration: underline;">See the source code on github</a>
            <a href="/about.html" class="text_url" style="text-decoration: underline;">About me</a>
            <a href="#" class="text_url" style="text-decoration: underline;">Back to top</a>
            <i class="material-icons footer_arrow" style="left: 40%;" onclick="scrollrtxce();" id="arrow">keyboard_arrow_down</i>
        </p>   
    
    </div>
    <h1 style="text-align: center; color: rgb(108, 219, 210);">Comments</h1>
    
    <div id="comments">
        <img src="../../loading.gif" alt="none" style="width: 30%;">
    </div>

    <div style="background-color: aqua; display: none;" id="Comment_box">
        <img src="../../loading.gif" alt="" id="userpic" style="width: 32px;">
        <p id="username" style="display: inline;">commenting as:</p>
        <input class="inpcmnt" type="search" id="comment" onsearch="comment(document.getElementById('comment').value)" style="width: 100%;" placeholder="Add a comment"></input> 
    </div>
    <button onclick="comment(document.getElementById('comment').value)" style="font-size: 4vmin;">Comment</button>
    <p id="subscribed" style="font-size: 5vmin; color: #c51ddb;"> You must subscribe to comment</p>
    <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><b><br><b><br><br><br><br><br><br><br><br><br><br><br><br><br></b></b>
    <script src="../../common.js"></script>
    <!-- The core Firebase JS SDK is always required and must be listed first -->
    <script src="https://www.gstatic.com/firebasejs/8.6.8/firebase-app.js"></script>

    <!-- TODO: Add SDKs for Firebase products that you want to use
        https://firebase.google.com/docs/web/setup#available-libraries -->
    <script src="https://www.gstatic.com/firebasejs/8.6.8/firebase-analytics.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.6.8/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.6.8/firebase-firestore.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.6.8/firebase-performance.js"></script>

    <script>
        const currentdoc = "basic_computers"
    var run = true;
        // Your web app's Firebase configuration
        // For Firebase JS SDK v7.20.0 and later, measurementId is optional
        var firebaseConfig = {
            apiKey: "AIzaSyCdRFuXHIiuxwCiE3gbTxcPmx5iETiX4xQ",
            authDomain: "blog-47049.firebaseapp.com",
            projectId: "blog-47049",
            storageBucket: "blog-47049.appspot.com",
            messagingSenderId: "552440753588",
            appId: "1:552440753588:web:9f8781871e2e6fd454d6e1",
            measurementId: "G-4J1X0XP8WZ"
        };
        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
        firebase.analytics();
        var perf = firebase.performance();
        var db = firebase.firestore();
        function signingoogle() {
            let provider = new firebase.auth.GoogleAuthProvider();
            firebase.auth().signInWithRedirect(provider);
        }
        
        firebase.auth().onAuthStateChanged((user) => {
  if (user) {/**/
    document.getElementById("subscribed").style.display='none';
      document.getElementById('Comment_box').style.display="";
    // User is signed in, see docs for a list of available properties
    // https://firebase.google.com/docs/reference/js/firebase.User
    var uid = user.uid;
    document.getElementById("username").innerHTML="commenting as: "+firebase.auth().currentUser.displayName;
    if (firebase.auth().currentUser.photoURL != null) {
        document.getElementById("userpic").src=firebase.auth().currentUser.photoURL;
    } else {
        document.getElementById("userpic").src='https://firebasestorage.googleapis.com/v0/b/blog-47049.appspot.com/o/pfp%2Fnot-logged-in-32.png?alt=media';
    }
    
    // ...
  } else {
    // User is signed out
    // ...
  }
});

        function signinemail(email) {
            document.getElementById("error").innerHTML="An email was sent to you with instructions to subscribe";
            var actionCodeSettings = {
                // URL you want to redirect back to. The domain (www.example.com) for this
                // URL must be in the authorized domains list in the Firebase Console.
                url: 'https://s-dhir.github.io/blog',
                // This must be true.
                handleCodeInApp: true,
                iOS: {
                    bundleId: 'com.example.ios'
                },
                android: {
                    packageName: 'com.example.android',
                    installApp: true,
                    minimumVersion: '12'
                },
                dynamicLinkDomain: 'dhir.page.link'
            };
            firebase.auth().sendSignInLinkToEmail(email.toString(), actionCodeSettings)
                .then(() => {
                    // The link was successfully sent. Inform the user.
                    // Save the email locally so you don't need to ask the user for it again
                    // if they open the link on the same device.
                    let cname, cvalue, exdays;
                    cname="email";
                    cvalue=email;
                    exdays=3;
                    var d = new Date();
                    d.setTime(d.getTime() + (exdays*24*60*60*1000));
                    var expires = "expires="+ d.toUTCString();
                    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
                    window.localStorage.setItem('emailForSignIn', email);
                    console.log(email);
                    // ...
                })
                .catch((error) => {
                    var errorCode = error.code;
                    var errorMessage = error.message;
                    console.log(errorCode);
                    console.log(errorMessage);
                    document.getElementById("error").innerHTML=errorMessage;

                    // ...
                });
                // Confirm the link is a sign-in with email link.
                if (firebase.auth().isSignInWithEmailLink(window.location.href)) {
                    // Additional state parameters can also be passed via URL.
                    // This can be used to continue the user's intended action before triggering
                    // the sign-in operation.
                    // Get the email if available. This should be available if the user completes
                    // the flow on the same device where they started it.
                    
                    var email = window.localStorage.getItem('emailForSignIn');
                    if (firebase.auth().currentUser==null) {
                        // User opened the link on a different device. To prevent session fixation
                        // attacks, ask the user to provide the associated email again. For example:
                        email = window.prompt('Please provide your email for confirmation');
                    }
                    // The client SDK will parse the code from the link for you.
                    firebase.auth().signInWithEmailLink(email, window.location.href)
                        .then((result) => {
                        // Clear email from storage.
                        window.localStorage.removeItem('emailForSignIn');
                        console.log(firebase.auth().credential);
                        console.log(firebase.auth().currentUser)
                        // You can access the new user via result.user
                        // Additional user info profile not available via:
                        // result.additionalUserInfo.profile == null
                        // You can check if the user is new or existing:
                        // result.additionalUserInfo.isNewUser
                        })
                        .catch((error) => {
                        // Some error occurred, you can inspect the code: error.code
                        // Common errors could be invalid email and invalid or expired OTPs.
                        });
                }   
                
        }

        // Confirm the link is a sign-in with email link.
        if (firebase.auth().isSignInWithEmailLink(window.location.href)) {
        // Additional state parameters can also be passed via URL.
        // This can be used to continue the user's intended action before triggering
        // the sign-in operation.
        // Get the email if available. This should be available if the user completes
        // the flow on the same device where they started it.
        var email = window.localStorage.getItem('emailForSignIn');
        if (!email) {
            // User opened the link on a different device. To prevent session fixation
            // attacks, ask the user to provide the associated email again. For example:
            email = window.prompt('Please provide your email for confirmation');
        }
        // The client SDK will parse the code from the link for you.
        firebase.auth().signInWithEmailLink(email, window.location.href)
            .then((result) => {
            // Clear email from storage.
            window.localStorage.removeItem('emailForSignIn');
            // You can access the new user via result.user
            // Additional user info profile not available via:
            // result.additionalUserInfo.profile == null
            // You can check if the user is new or existing:
            // result.additionalUserInfo.isNewUser
            })
            .catch((error) => {
            // Some error occurred, you can inspect the code: error.code
            // Common errors could be invalid email and invalid or expired OTPs.
            });
        }
        firebase.auth()
            .getRedirectResult()
            .then((result) => {
                if (result.credential) {
                /** @type {firebase.auth.OAuthCredential} */
                var credential = result.credential;
                console.log("credential:"+credential)
                // This gives you a Google Access Token. You can use it to access the Google API.
                var token = credential.accessToken;
                console.log("token:"+token)
                // ...
                }
                // The signed-in user info.
                var user = result.user;
                console.log(user.photoURL);
                sleep(500, function()
                {
                    console.log('1');
                    sleep(500, function()
                    {
                        console.log('2');
                        console.log(firebase.auth().currentUser);
                        if (firebase.auth().currentUser==null) {
                            console.log(firebase.auth().currentUser)
                            document.getElementById("popup").style.display="initial";
                            document.getElementById("popup2").style.display="initial";
                        }
                        else {
                            console.log(firebase.auth())
                            document.getElementById("popup").style.display="none";
                            document.getElementById("popup2").style.display="none"; 
                        }
                    })
                })
            }).catch((error) => {
                // Handle Errors here.
                var errorCode = error.code;
                var errorMessage = error.message;
                // The email of the user's account used.
                var email = error.email;
                // The firebase.auth.AuthCredential type that was used.
                var credential = error.credential;
                // ...
            });
            function remove() {
                let user = firebase.auth().currentUser;
                user.delete().then(() => {
                console.log("deleted");
                }).catch((error) => {
                console.log("error:");
                console.log(error);
                });
            }
    </script>
    <script>
        function month(number){
            var month= [null,"January","February","March","April","May","June","July",
            "August","September","October","November","December"];
            return month[parseInt(number)];
        }
        var docRef;
        firebase.firestore().collection(currentdoc).get().then((doc) => {
            document.getElementById("comments").innerHTML="";
            const doclength = doc.docs.length;
            for (let iok=1; (iok<(doclength+1));) {
                db.collection(currentdoc).doc("C" + iok)
                .get().then((doc) => {
                    if (doc.exists) {
                        console.log(doc.data());
                        var recieve=doc.data();
                        
                        document.getElementById("comments").innerHTML=document.getElementById("comments").innerHTML+'<img src="'+recieve["photo"]+'" style="width: 32px; height: 32px;">&nbsp;'+recieve["name"]+"<p>"+recieve["comment"]+'<br> Uploaded: '+recieve["time"].charAt(0)+recieve["time"].charAt(1)+':'+recieve["time"].charAt(2)+recieve["time"].charAt(3)+' on '+ month(recieve["date"].charAt(2)+recieve["date"].charAt(3))+' '+recieve["time"].charAt(0)+recieve["time"].charAt(1)+' year '+recieve["date"].charAt(4)+recieve["date"].charAt(5)+recieve["date"].charAt(6)+recieve["date"].charAt(7)+'</div><hr style="width: 100vw;"><div>'
                    } else {
                        
                        kte=false;
                        console.log(kte);
                    }
                }).catch((error) => {
                    console.log(error);
                }); 
                iok=iok+1;
        }
        }).catch((error) => {
            console.log(error);
            location.reload();
        })
        
        function comment(coment) {
            /*intentional spelling error so to not get confused with other comments*/
            var year = new Date().getFullYear().toString();
            var month = new Date().getMonth();
            month=month+1;
            month=month.toString();
            var date = new Date().getDate().toString();
            var hour = new Date().getHours();
            hour = hour+1;
            hour = hour.toString();
            var minute = new Date().getMinutes();
            minute=minute+1;
            minute=minute.toString();
            if (month.length=1) {
                month="0"+month;
            }
            var docRef;
            
            
            db.collection(currentdoc).get().then((doc) => {
                    console.log(doc.docs.length);
                    db.collection(currentdoc).doc('C'+(doc.docs.length+1).toString()).set({
                        "comment":coment,
                        "date":date + month + year,
                        "name": firebase.auth().currentUser.displayName,
                        "photo":firebase.auth().currentUser.photoURL,
                        "time":hour+minute
                    })
                    .then(() => {
                        console.log("document written");
                        location.reload();
                    })
                    .catch((error) => {
                        console.log(error);
                    })
                }).catch((error) => {
                    console.log(error)
                });
            }  
            
    </script>
    <script>
        var loadend=performance.now();
        console.log("loading time is "+(Math.round(loadend-loadstart))+" milliseconds")
    </script>
</body>
</html>
